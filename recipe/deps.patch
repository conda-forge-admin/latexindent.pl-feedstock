diff --git a/.appveyor.yml b/.appveyor.yml
index 17ec4af..e22dfb7 100644
--- a/.appveyor.yml
+++ b/.appveyor.yml
@@ -11,7 +11,6 @@ install:
   - set PATH=C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%PATH%
   - cpanm YAML::Tiny
   - cpanm File::HomeDir
-  - cpanm Unicode::GCString
 
 # the test cases
 build_script:
diff --git a/.github/workflows/batch-check.yaml b/.github/workflows/batch-check.yaml
index 6c251f6..3dc07c7 100644
--- a/.github/workflows/batch-check.yaml
+++ b/.github/workflows/batch-check.yaml
@@ -56,7 +56,6 @@ jobs:
         run: |
           cpanm YAML::Tiny
           cpanm File::HomeDir
-          cpanm Unicode::GCString
       - if: ${{ matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest' }}
         name: loop for running latexindent.pl --check test-cases/check-switch-tests/*.tex
         run: |
diff --git a/.github/workflows/build-documentation-and-windows-exe.yaml b/.github/workflows/build-documentation-and-windows-exe.yaml
index f27c776..7a45fac 100644
--- a/.github/workflows/build-documentation-and-windows-exe.yaml
+++ b/.github/workflows/build-documentation-and-windows-exe.yaml
@@ -71,7 +71,6 @@ jobs:
           cpanm -f PAR::Packer
           cpanm YAML::Tiny
           cpanm File::HomeDir
-          cpanm Unicode::GCString
           copy helper-scripts/ppp.pl ./
           perl ppp.pl -o latexindent.exe latexindent.pl
           mkdir -p target/release
diff --git a/.travis.yml b/.travis.yml
index 9f49d37..5dc1a78 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -15,7 +15,6 @@ install:
  - curl -L http://cpanmin.us | perl - App::cpanminus
  - cpanm YAML::Tiny
  - cpanm File::HomeDir
- - cpanm Unicode::GCString
 script: 
   - "cd test-cases/continuous-integration"
   - "bash ./test-travis-ci.sh"
diff --git a/LatexIndent/AlignmentAtAmpersand.pm b/LatexIndent/AlignmentAtAmpersand.pm
index 8f67d62..35f8e09 100644
--- a/LatexIndent/AlignmentAtAmpersand.pm
+++ b/LatexIndent/AlignmentAtAmpersand.pm
@@ -17,7 +17,6 @@ package LatexIndent::AlignmentAtAmpersand;
 use strict;
 use warnings;
 use utf8;
-use Unicode::GCString;
 use Data::Dumper;
 use Exporter qw/import/;
 use List::Util qw/max min sum/;
@@ -29,7 +28,7 @@ use LatexIndent::LogFile qw/$logger/;
 use LatexIndent::HiddenChildren qw/%familyTree/;
 use LatexIndent::Verbatim qw/%verbatimStorage/;
 our @ISA = "LatexIndent::Document"; # class inheritance, Programming Perl, pg 321
-our @EXPORT_OK = qw/align_at_ampersand find_aligned_block double_back_slash_else main_formatting individual_padding multicolumn_padding multicolumn_pre_check multicolumn_post_check dont_measure hidden_child_cell_row_width hidden_child_row_width /;
+our @EXPORT_OK = qw/align_at_ampersand find_aligned_block double_back_slash_else main_formatting individual_padding multicolumn_padding multicolumn_pre_check multicolumn_post_check dont_measure hidden_child_cell_row_width hidden_child_row_width get_column_width/;
 our $alignmentBlockCounter;
 our @cellStorage;   # two-dimensional storage array containing the cell information
 our @formattedBody; # array for the new body
@@ -246,7 +245,7 @@ sub align_at_ampersand{
                 # for the *previous* cell
                 my $spanningOffSet = ($spanning > 0 ?  $spanning - 1 : 0);
                 ${$cellStorage[$rowCounter][$columnCounter - $spanningOffSet]}{delimiter} = $1;
-                ${$cellStorage[$rowCounter][$columnCounter - $spanningOffSet]}{delimiterLength} = Unicode::GCString->new($1)->columns();
+                ${$cellStorage[$rowCounter][$columnCounter - $spanningOffSet]}{delimiterLength} = &get_column_width($1);
 
                 # keep track of maximum delimiter width
                 $maxDelimiterWidth[$columnCounter - $spanningOffSet] = 
@@ -273,7 +272,7 @@ sub align_at_ampersand{
 
             # basic cell storage
             $cellStorage[$rowCounter][$columnCounter] 
-                    = ({width=>Unicode::GCString->new($column)->columns(),
+                    = ({width=>&get_column_width($column),
                         entry=>$column,
                         type=>($numberOfAmpersands>0 ? "X" : "*"),
                         groupPadding=>0,
@@ -443,7 +442,7 @@ sub align_at_ampersand{
         if( (${$self}{begin} eq '{' | ${$self}{begin} eq '[') and ${$self}{parentBegin}){
             $lengthOfBegin = ${$self}{parentBegin}."{";
         }
-        ${$self}{indentation} = " " x Unicode::GCString->new($lengthOfBegin)->columns();
+        ${$self}{indentation} = " " x (&get_column_width($lengthOfBegin));
         $logger->trace("Adjusting indentation of ${$self}{name} in AlignAtAmpersand routine") if($is_t_switch_active);
     }
   }
@@ -540,7 +539,7 @@ sub main_formatting {
       # objective (2): calculate row width and update maximumRowWidth
       # objective (2): calculate row width and update maximumRowWidth
       # objective (2): calculate row width and update maximumRowWidth
-      my $rowWidth  = Unicode::GCString->new($tmpRow)->columns();
+      my $rowWidth  = &get_column_width($tmpRow);
 
       # possibly update rowWidth if there are hidden children; see test-cases/alignment/hidden-child1.tex and friends
       $rowWidth = $self->hidden_child_row_width($tmpRow,$rowCount,$rowWidth) if(${$self}{measureHiddenChildren} or ${$self}{measureVerbatim});
@@ -1434,12 +1433,12 @@ sub hidden_child_cell_row_width{
     if($bodyLineBreaks>0){
         my $maxRowWidthWithinCell = 0;
         foreach(split("\n",$tmpCellEntry)){
-           my $currentRowWidth = Unicode::GCString->new($_)->columns();
+           my $currentRowWidth = &get_column_width($_);
            $maxRowWidthWithinCell = $currentRowWidth if ($currentRowWidth > $maxRowWidthWithinCell );
         }
         ${$cellStorage[$rowCounter][$columnCounter]}{width} = $maxRowWidthWithinCell;
     } else {
-        ${$cellStorage[$rowCounter][$columnCounter]}{width} = Unicode::GCString->new($tmpCellEntry)->columns();
+        ${$cellStorage[$rowCounter][$columnCounter]}{width} = &get_column_width($tmpCellEntry);
     }
 }
 
@@ -1481,7 +1480,7 @@ sub hidden_child_row_width{
         if( (${$self}{begin} eq '{' | ${$self}{begin} eq '[') and ${$self}{parentBegin}){
             $beginToMeasure = ${$self}{parentBegin}."{";
         }
-        $lengthOfBegin = Unicode::GCString->new($beginToMeasure)->columns();
+        $lengthOfBegin = &get_column_width($beginToMeasure);
         $tmpRow = $beginToMeasure.$tmpRow if $rowCount == 0;
     }
 
@@ -1492,7 +1491,7 @@ sub hidden_child_row_width{
            for my $hiddenChildToMeasure (@{${$self}{measureHiddenChildren}}){
                if($tmpRow=~m/(^.*)?$hiddenChildToMeasure/m and defined $familyTree{$hiddenChildToMeasure}{bodyForMeasure}){
                   my $partBeforeId = $1;
-                  my $lengthPartBeforeId = Unicode::GCString->new($partBeforeId)->columns(); 
+                  my $lengthPartBeforeId = &get_column_width($partBeforeId); 
 
                   foreach (@{$familyTree{$hiddenChildToMeasure}{ancestors}}){
                     if (${$_}{ancestorID} eq ${$self}{id}){
@@ -1536,17 +1535,17 @@ sub hidden_child_row_width{
                my $maxRowWidth = 0;
 
                foreach(split("\n",$tmpRow)){
-                  my $currentRowWidth = Unicode::GCString->new($_)->columns();
+                  my $currentRowWidth = &get_column_width($_);
                   $maxRowWidth = $currentRowWidth if ($currentRowWidth > $maxRowWidth );
                }
                $rowWidth  = $maxRowWidth;
            } else {
-               $rowWidth  = Unicode::GCString->new($tmpRow)->columns();
+               $rowWidth  = &get_column_width($tmpRow);
            }
         } elsif (!${${$self}{linebreaksAtEnd}}{begin} 
                   and ${$cellStorage[0][0]}{type} eq "X" 
                   and ${$cellStorage[0][0]}{measureThis}){
-              $rowWidth  = Unicode::GCString->new($tmpRow)->columns();
+              $rowWidth  = &get_column_width($tmpRow);
         }
 
         # possibly draw ruler to log file
@@ -1567,7 +1566,7 @@ sub draw_ruler_to_logfile{
     $logger->trace("*tmpRow:");
 
     foreach(split("\n",$tmpRow)){
-       my $currentRowWidth = Unicode::GCString->new($_)->columns();
+       my $currentRowWidth = &get_column_width($_);
        $logger->trace("$_ \t(length: $currentRowWidth)");
     }
 
@@ -1579,4 +1578,8 @@ sub draw_ruler_to_logfile{
     $logger->trace($ruler);
 
 }
+
+sub get_column_width{
+    return length(Encode::decode('UTF-8', $_[0]));
+}
 1;
diff --git a/LatexIndent/LogFile.pm b/LatexIndent/LogFile.pm
index 692bfdd..6138733 100644
--- a/LatexIndent/LogFile.pm
+++ b/LatexIndent/LogFile.pm
@@ -178,7 +178,7 @@ ENDQUOTE
 
     # output location of modules
     if($FindBin::Script eq 'latexindent.pl' or ($FindBin::Script eq 'latexindent.exe' and $switches{trace} )) {
-        my @listOfModules = ('FindBin', 'YAML::Tiny', 'File::Copy', 'File::Basename', 'Getopt::Long','File::HomeDir','Unicode::GCString');
+        my @listOfModules = ('FindBin', 'YAML::Tiny', 'File::Copy', 'File::Basename', 'Getopt::Long','File::HomeDir');
         $logger->info("*Perl modules are being loaded from the following directories:");
         foreach my $moduleName (@listOfModules) {
                 (my $file = $moduleName) =~ s|::|/|g;
diff --git a/LatexIndent/Logger.pm b/LatexIndent/Logger.pm
index d3f9d0f..ebad76a 100644
--- a/LatexIndent/Logger.pm
+++ b/LatexIndent/Logger.pm
@@ -26,6 +26,7 @@ our @logFileLines;
 sub info{
     my $self = shift;
     my $logfileline = shift;
+    return unless (defined $logfileline); 
     if ($logfileline =~ m/^\*/s){
         $logfileline =~ s/^\*/INFO:  /s;
         $logfileline =~ s/^/        /mg;
diff --git a/LatexIndent/ModifyLineBreaks.pm b/LatexIndent/ModifyLineBreaks.pm
index 128dcd8..ca8d2ef 100644
--- a/LatexIndent/ModifyLineBreaks.pm
+++ b/LatexIndent/ModifyLineBreaks.pm
@@ -18,6 +18,7 @@ use strict;
 use warnings;
 use Exporter qw/import/;
 use Text::Wrap;
+use LatexIndent::AlignmentAtAmpersand qw/get_column_width/;
 use LatexIndent::GetYamlSettings qw/%mainSettings/;
 use LatexIndent::Tokens qw/%tokens/;
 use LatexIndent::TrailingComments qw/$trailingCommentRegExp/;
@@ -331,7 +332,7 @@ sub text_wrap{
         if(${$self}{body} =~m/$verbatimID/s){
 
           # measure length
-          my $verbatimLength = Unicode::GCString->new($verbatimThing)->columns();
+          my $verbatimLength = &get_column_width($verbatimThing);
 
           # create temporary ID, and check that it is not contained in the body
           my $verbatimTmpID = join '' => map $set[rand @set], 1 .. $verbatimLength;
diff --git a/documentation/sec-appendices.tex b/documentation/sec-appendices.tex
index b797f2e..26f8fca 100644
--- a/documentation/sec-appendices.tex
+++ b/documentation/sec-appendices.tex
@@ -14,7 +14,6 @@ use strict;
 use warnings;
 use utf8;
 use PerlIO::encoding;
-use Unicode::GCString;
 use open ':std', ':encoding(UTF-8)';
 use Text::Wrap;
 use Text::Tabs;
@@ -63,7 +62,6 @@ sudo apt-get install curl
 curl -L http://cpanmin.us | perl - App::cpanminus
 cpanm YAML::Tiny
 cpanm File::HomeDir
-cpanm Unicode::GCString
 \end{commandshell}
 			\index{cpan}
 
@@ -74,7 +72,6 @@ sudo apt install perl
 sudo cpan -i App::cpanminus
 sudo cpanm YAML::Tiny
 sudo cpanm File::HomeDir
-sudo cpanm Unicode::GCString
 \end{commandshell}
 			or else by running, for example,
 			\begin{commandshell}
@@ -119,7 +116,6 @@ cpanm -n App::cpanminus
 cpanm -n File::HomeDir
 cpanm -n Params::ValidationCompiler
 cpanm -n YAML::Tiny
-cpanm -n Unicode::GCString
 \end{cmhlistings}
 
 			Users of NixOS might like to see
@@ -134,7 +130,6 @@ brew install cpanm
 
 cpanm YAML::Tiny
 cpanm File::HomeDir
-cpanm Unicode::GCString
 \end{commandshell}
 
 	\subsubsection{Windows}
diff --git a/readme.md b/readme.md
index 75b7b5b..2c1f7f6 100644
--- a/readme.md
+++ b/readme.md
@@ -67,6 +67,8 @@ of test cases on every commit.
 <details>
 <summary>perl users</summary>
 
+### by hand
+
 You'll need
 ```
 latexindent.pl
@@ -75,6 +77,35 @@ defaultSettings.yaml
 ```
 in the same directory.
 
+You'll need a few readily-available perl modules. Full details are given within the Appendix
+of the [documentation](https://latexindentpl.readthedocs.io/en/latest/);
+you might also like to see [.travis.yml](.travis.yml) for Linux/MacOS users,
+and [.appveyor.yml](.appveyor.yml) for Strawberry perl users.
+
+Windows users who do not have a perl installation might prefer to get
+
+    latexindent.exe
+    defaultSettings.yaml
+
+`latexindent.exe` is a standalone executable file which does not require a `perl` installation.
+It is available at [releases](https://github.com/cmhughes/latexindent.pl/releases) page of this repository
+and also from [https://ctan.org/tex-archive/support/latexindent](https://ctan.org/tex-archive/support/latexindent).
+
+`latexindent.exe` is created and released by [GitHub Actions](https://github.com/features/actions); the
+file that controls this is available within the [github/workflows](https://github.com/cmhughes/latexindent.pl/tree/main/.github/workflows) directory
+of this repository, and you can track the actions on the [actions page](https://github.com/cmhughes/latexindent.pl/actions/) of this repository.
+
+> ![Batch latexindent.pl check](https://github.com/cmhughes/latexindent.pl/actions/workflows/batch-check.yaml/badge.svg)
+![Publish latexindent.exe](https://github.com/cmhughes/latexindent.pl/actions/workflows/build-documentation-and-windows-exe.yaml/badge.svg)
+
+### with conda
+
+If you use conda you'll only need
+```
+conda install latexindent.pl -c conda-forge
+```
+in the same directory.
+
 You'll need a few readily-available perl modules. Full details are given within the Appendix
 of the [documentation](https://latexindentpl.readthedocs.io/en/latest/);
 you might also like to see [.travis.yml](.travis.yml) for Linux/MacOS users,
@@ -105,11 +136,15 @@ You don't even have to worry about `defaultSettings.yaml` as it included too.
 
 ## GitHub Actions
 `latexindent.exe` is created and released by [GitHub Actions](https://github.com/features/actions); the
-file that controls this is available within the [github/workflows](https://github.com/cmhughes/latexindent.pl/tree/main/.github/workflows) 
+file that controls this is available within the [github/workflows](https://github.com/cmhughes/latexindent.pl/tree/main/.github/workflows)
 directory of this repository, and you can track the actions on the [actions page](https://github.com/cmhughes/latexindent.pl/actions/) of this repository.
 
 > ![Batch latexindent.pl check](https://github.com/cmhughes/latexindent.pl/actions/workflows/batch-check.yaml/badge.svg)
 ![Publish latexindent.exe](https://github.com/cmhughes/latexindent.pl/actions/workflows/build-documentation-and-windows-exe.yaml/badge.svg)
+this will install the executable and all its dependencies (including perl) in the activate environment.
+You don't even have to worry about `defaultSettings.yaml` as it included too.
+
+> [![Conda Version](https://img.shields.io/conda/vn/conda-forge/latexindent.pl.svg)](https://anaconda.org/conda-forge/latexindent.pl)
 
 ## testing
 
diff --git a/test-cases/alignment/alignment-test-cases.sh b/test-cases/alignment/alignment-test-cases.sh
index f396132..abc0758 100755
--- a/test-cases/alignment/alignment-test-cases.sh
+++ b/test-cases/alignment/alignment-test-cases.sh
@@ -11,6 +11,7 @@ latexindent.pl -s simple-multi-column.tex -o=+-mod2 -y="lookForAlignDelims:tabul
 latexindent.pl -s simple-multi-column.tex -o=+-mod3 -y="lookForAlignDelims:tabular:multiColumnGrouping:1;spacesBeforeAmpersand:3;justification:right"
 latexindent.pl -s simple-multi-column.tex -o=+-mod4 -y="lookForAlignDelims:tabular:multiColumnGrouping:1;spacesAfterAmpersand:3;justification:right"
 latexindent.pl -s table1.tex -o table1-default.tex
+latexindent.pl -s unicode1.tex -o unicode1-default.tex
 
 [[ $silentMode == 0 ]] && set +x 
 for (( i=$loopmin ; i <= $loopmax ; i++ )) 
diff --git a/test-cases/alignment/unicode-quick-brown.tex b/test-cases/alignment/unicode-quick-brown.tex
new file mode 100644
index 0000000..0388acf
--- /dev/null
+++ b/test-cases/alignment/unicode-quick-brown.tex
@@ -0,0 +1,130 @@
+Taken from https://www.cl.cam.ac.uk/~mgk25/ucs/examples/quickbrown.txt
+
+Danish (da)
+---------
+\begin{tabular}
+Quizdeltagerne&spiste&jordbær&med&fløde,&mens&cirkusklovnen\\
+1&2&3&4&5&6&7
+\end{tabular}
+
+German (de)
+-----------
+\begin{tabular}
+Falsches&Üben&von&Xylophonmusik&quält&jeden&größeren&Zwerg&\\
+a&a&a&a&a&a&a&a&\\
+\end{tabular}
+  (= Wrongful practicing of xylophone music tortures every larger dwarf)
+
+\begin{tabular}
+Zwölf&Boxkämpfer&jagten&Eva&quer&über&den&Sylter&Deich&Heizölrückstoßabdämpfung&\\
+a&a&a&a&a&a&a&a&a&a&a
+\end{tabular}
+(= Twelve boxing fighters hunted Eva across the dike of Sylt)
+
+%Greek (el)
+%----------
+%\begin{tabular}
+%Γαζέες&καὶ&μυρτιὲς&δὲν&θὰ&βρῶ&πιὰ&στὸ&χρυσαφὶ&ξέφωτο
+%a a a a a a a a a a
+%\end{tabular}
+%  (= No more shall I see acacias or myrtles in the golden clearing)
+%
+%\begin{tabular}
+%Ξεσκεπάζω&τὴν&ψυχοφθόρα&βδελυγμία\\
+%a&a&a&a&&
+%\end{tabular}
+%  (= I uncover the soul-destroying abhorrence)
+
+French (fr)
+-----------
+\begin{tabular}
+intérieure&à&côté&de&l'alcôve&ovoïde,&où&les&bûches&se&consument&dans&l'âtre,&ce\\
+a&a&a&a&a&a&a&a&a&a&a&a&a&a&
+\end{tabular}
+
+\begin{tabular}
+pense-t-il, & diminue & çà & et & là & la & qualité & de & son & œuvre. \\
+\end{tabular}
+
+Irish Gaelic (ga)
+-----------------
+
+  D'fhuascail Íosa, Úrmhac na hÓighe Beannaithe, pór Éava agus Ádhaimh
+
+Hungarian (hu)
+--------------
+
+  Árvíztűrő tükörfúrógép
+  (= flood-proof mirror-drilling machine, only all non-ASCII letters)
+
+Icelandic (is)
+--------------
+
+  Kæmi ný öxi hér ykist þjófum nú bæði víl og ádrepa
+
+  Sævör grét áðan því úlpan var ónýt
+  (some ASCII letters missing)
+
+Japanese (jp)
+-------------
+
+  Hiragana: (Iroha)
+
+  いろはにほへとちりぬるを
+  わかよたれそつねならむ
+  うゐのおくやまけふこえて
+  あさきゆめみしゑひもせす
+
+  Katakana:
+
+  イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム
+  ウヰノオクヤマ ケフコエテ アサキユメミシ ヱヒモセスン
+
+Hebrew (iw)
+-----------
+
+  ? דג סקרן שט בים מאוכזב ולפתע מצא לו חברה איך הקליטה
+
+Polish (pl)
+-----------
+
+  Pchnąć w tę łódź jeża lub ośm skrzyń fig
+  (= To push a hedgehog or eight bins of figs in this boat)
+
+Russian (ru)
+------------
+
+  В чащах юга жил бы цитрус? Да, но фальшивый экземпляр!
+  (= Would a citrus live in the bushes of south? Yes, but only a fake one!)
+
+  Съешь же ещё этих мягких французских булок да выпей чаю
+  (= Eat some more of these fresh French loafs and have some tea) 
+
+Thai (th)
+---------
+
+  [--------------------------|------------------------]
+  ๏ เป็นมนุษย์สุดประเสริฐเลิศคุณค่า  กว่าบรรดาฝูงสัตว์เดรัจฉาน
+  จงฝ่าฟันพัฒนาวิชาการ           อย่าล้างผลาญฤๅเข่นฆ่าบีฑาใคร
+  ไม่ถือโทษโกรธแช่งซัดฮึดฮัดด่า     หัดอภัยเหมือนกีฬาอัชฌาสัย
+  ปฏิบัติประพฤติกฎกำหนดใจ        พูดจาให้จ๊ะๆ จ๋าๆ น่าฟังเอย ฯ
+
+  [The copyright for the Thai example is owned by The Computer
+  Association of Thailand under the Royal Patronage of His Majesty the
+  King.]
+
+Turkish (tr)
+------------
+
+  Pijamalı hasta, yağız şoföre çabucak güvendi.
+  (=Patient with pajamas, trusted swarthy driver quickly)
+
+
+Special thanks to the people from all over the world who contributed
+these sentences since 1999.
+
+A much larger collection of such pangrams is now available at
+
+  http://en.wikipedia.org/wiki/List_of_pangrams
+
+
diff --git a/test-cases/alignment/unicode1-default.tex b/test-cases/alignment/unicode1-default.tex
new file mode 100644
index 0000000..621ec78
--- /dev/null
+++ b/test-cases/alignment/unicode1-default.tex
@@ -0,0 +1,5 @@
+\begin{tabular}{l|lll}
+	Name    & Jörg & Dirk & brûlée & Fön \\
+	Größe   & 180  & 195  & 178    & 1   \\
+	Gewicht & 75   & 92   & 77     & 2   \\
+\end{tabular}
diff --git a/test-cases/alignment/unicode1.tex b/test-cases/alignment/unicode1.tex
new file mode 100644
index 0000000..0f46d29
--- /dev/null
+++ b/test-cases/alignment/unicode1.tex
@@ -0,0 +1,5 @@
+\begin{tabular}{l|lll}
+Name & Jörg & Dirk & brûlée & Fön \\
+Größe & 180 & 195 & 178 &1\\
+Gewicht & 75 & 92 & 77 &2\\
+\end{tabular}
